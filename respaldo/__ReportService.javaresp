package com.actours.jasperreport.service;

import net.sf.jasperreports.engine.*;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Service;

import jakarta.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.InputStream;
import java.util.Map;

@Service
public class ReportService {
    private static final Logger logger = LoggerFactory.getLogger(ReportService.class);

    public JasperReport compileReport(String jrxmlFilePath) {
        try {
            InputStream jrxmlStream = new ClassPathResource(jrxmlFilePath).getInputStream();
            return JasperCompileManager.compileReport(jrxmlStream);
        } catch (Exception e) {
            logger.error("Error al compilar el archivo JRXML: {}", jrxmlFilePath, e);
            throw new RuntimeException("Error al compilar el archivo JRXML", e);
        }
    }

    /*public void exportReport(HttpServletResponse response, Map<String, Object> parameters, String jrxmlFilePath) {
        try {
            JasperReport jasperReport = compileReport(jrxmlFilePath);
            JRDataSource dataSource = new JREmptyDataSource();
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, dataSource);
            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "inline; filename=reporte.pdf");
            JasperExportManager.exportReportToPdfStream(jasperPrint, response.getOutputStream());
        } catch (Exception e) {
            logger.error("Error al exportar el reporte", e);
            throw new RuntimeException("Error al exportar el reporte", e);
        }
    }*/

    public void exportReport(HttpServletResponse response, Map<String, Object> parameters, String jrxmlFilePath) {
        try {
            JasperReport jasperReport = compileReport(jrxmlFilePath);
            JRDataSource dataSource = new JREmptyDataSource();
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, dataSource);
            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "inline; filename=reporte.pdf");
            JasperExportManager.exportReportToPdfStream(jasperPrint, response.getOutputStream());
            response.getOutputStream().flush();
        } catch (Exception e) {
            logger.error("Error al exportar el reporte", e);
            throw new RuntimeException("Error al exportar el reporte", e);
        }
    }
}
